---
# Configuración de Gateway Debian: IP forwarding, NAT (nftables), DHCP/DNS (dnsmasq)

- name: Instalar paquetes requeridos (dnsmasq, nftables)
  apt:
    name:
      - dnsmasq
      - nftables
    state: present
    update_cache: true
  tags: ["router", "packages"]

- name: Configurar red LAN persistente (ifupdown) si se solicita
  template:
    src: interfaces.lan.j2
    dest: "/etc/network/interfaces.d/{{ router_internal_interface }}.cfg"
    owner: root
    group: root
    mode: '0644'
  when: router_network_persist | default(false) and (router_network_backend | default('networkd')) == 'ifupdown'
  notify: aplicar-red
  tags: ["router", "network"]

- name: Configurar red LAN persistente (systemd-networkd) si se solicita
  template:
    src: lan.network.j2
    dest: "/etc/systemd/network/10-{{ router_internal_interface }}.network"
    owner: root
    group: root
    mode: '0644'
  when: router_network_persist | default(false) and (router_network_backend | default('networkd')) == 'networkd'
  notify: reiniciar-networkd
  tags: ["router", "network"]

- name: Asegurar systemd-networkd habilitado y activo si se usa networkd
  systemd:
    name: systemd-networkd
    enabled: true
    state: started
  when: router_network_persist | default(false) and (router_network_backend | default('networkd')) == 'networkd'
  tags: ["router", "network"]

- name: Desactivar DNSStubListener de systemd-resolved si se solicita
  copy:
    dest: /etc/systemd/resolved.conf.d/disable-stub.conf
    content: |
      [Resolve]
      DNSStubListener=no
    owner: root
    group: root
    mode: '0644'
  when: resolved_disable_stub | default(true)
  notify: reiniciar-resolved
  tags: ["router", "dns"]

- name: Habilitar IP forwarding IPv4 de forma persistente
  copy:
    dest: /etc/sysctl.d/99-router.conf
    content: |
      net.ipv4.ip_forward = 1
    owner: root
    group: root
    mode: '0644'
  notify: aplicar-sysctl
  tags: ["router", "ipforward"]

- name: Aplicar sysctl inmediatamente
  command: sysctl -w net.ipv4.ip_forward=1
  changed_when: false
  tags: ["router", "ipforward"]

- name: Desplegar configuración de nftables con NAT
  template:
    src: nftables.conf.j2
    dest: /etc/nftables.conf
    owner: root
    group: root
    mode: '0644'
  notify: recargar-nftables
  tags: ["router", "nat", "firewall"]

- name: Asegurar servicio nftables habilitado y activo
  systemd:
    name: nftables
    state: started
    enabled: true
  tags: ["router", "nat", "firewall"]

- name: Esperar a que la IP LAN esté configurada en {{ router_internal_interface }}
  shell: ip -4 -o addr show dev {{ router_internal_interface }} | awk '{print $4}' | grep -q '^{{ router_internal_address }}/'
  register: _lan_ip_ready
  retries: 10
  delay: 3
  until: _lan_ip_ready.rc == 0
  changed_when: false
  when: router_network_persist | default(false)
  tags: ["router", "network"]

- name: Configurar dnsmasq (DHCP y DNS)
  template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.d/99-lab.conf
    owner: root
    group: root
    mode: '0644'
  notify: reiniciar-dnsmasq
  when: dnsmasq_enabled | default(true)
  tags: ["router", "dhcp", "dns"]

- name: Asegurar servicio dnsmasq habilitado y activo
  systemd:
    name: dnsmasq
    state: started
    enabled: true
  when: dnsmasq_enabled | default(true)
  tags: ["router", "dhcp", "dns"]
